# SQLite. Versions 3.8.0 and up are supported.
#   gem install sqlite3
#
#   Ensure the SQLite 3 gem is defined in your Gemfile
#   gem "sqlite3"
#
default: &default
  adapter: sqlite3
  pool: <%= ENV.fetch("RAILS_MAX_THREADS") { 5 } %>
  timeout: 5000

development:
  <<: *default
  database: storage/development.sqlite3

# Warning: The database defined as "test" will be erased and
# re-generated from your development database when you run "rake".
# Do not set this db to the same as development or production.
test:
  <<: *default
  database: storage/test.sqlite3


# Store production database in the storage/ directory, which by default
# is mounted as a persistent Docker volume in config/deploy.yml.
production:
  primary:
    <<: *default
    database: storage/shard_one/production.sqlite3
  primary_shard_two:
    <<: *default
    database: storage/shard_two/production.sqlite3
  primary_shard_three:
    <<: *default
    database: storage/shard_three/production.sqlite3
  primary_shard_four:
    <<: *default
    database: storage/shard_four/production.sqlite3
  primary_shard_five:
    <<: *default
    database: storage/shard_five/production.sqlite3
  primary_shard_six:
    <<: *default
    database: storage/shard_six/production.sqlite3
  primary_shard_seven:
    <<: *default
    database: storage/shard_seven/production.sqlite3
  primary_shard_eight:
    <<: *default
    database: storage/shard_eight/production.sqlite3


    # pragmas:
    #   synchronous: normal
    #   temp_store: memory
    #   mmap_size: "30000000000"
  cache:
    <<: *default
    database: storage/production_cache.sqlite3
    migrations_paths: db/cache_migrate
  queue:
    <<: *default
    database: storage/production_queue.sqlite3
    migrations_paths: db/queue_migrate
  cable:
    <<: *default
    database: storage/production_cable.sqlite3
    migrations_paths: db/cable_migrate
